@startuml

participant "LCM"
participant "Class\nApplicationProperty " #cceecc
participant "Class\nDscResourceBase" #ccccee
participant "Function\nConvertFrom-StringParameter" #ccccee
participant "Function\nConvertTo-StringParameter" #ccccee
participant "Function\nGet-ApplicationProperty" #cceecc

"LCM" -> "Class\nApplicationProperty " : ApplicationProperty.Get()
activate "Class\nApplicationProperty "

"Class\nApplicationProperty " -> "Class\nDscResourceBase" : ([DscResourceBase] $this).Get()
activate "Class\nDscResourceBase"

"Class\nDscResourceBase" -> "Function\nConvertFrom-StringParameter" : Parameter: [String]
activate "Function\nConvertFrom-StringParameter"

"Function\nConvertFrom-StringParameter" -> "Class\nDscResourceBase" : Return Type: [Correct Type]
deactivate "Function\nConvertFrom-StringParameter"

"Class\nDscResourceBase" -> "Function\nGet-ApplicationProperty" : ApplicationProperty fields as Parameters
note right
    DscResourceBase uses $this.GetType()
    to determine which function name to call.
end note
activate "Function\nGet-ApplicationProperty"

"Function\nGet-ApplicationProperty" -> "Class\nDscResourceBase" : Return Type: [Hashtable]
deactivate "Function\nGet-ApplicationProperty"

"Class\nDscResourceBase" -> "Function\nConvertTo-StringParameter" : Parameter: [Correct Type]
activate "Function\nConvertTo-StringParameter"

"Function\nConvertTo-StringParameter" -> "Class\nDscResourceBase" : Return Type: [String]
deactivate "Function\nConvertTo-StringParameter"

"Class\nDscResourceBase" -> "Class\nApplicationProperty " : Return Type: [ApplicationProperty]
deactivate "Class\nDscResourceBase"

"Class\nApplicationProperty " -> "LCM" : Return Type: [ApplicationProperty]
deactivate "Class\nApplicationProperty "
@enduml